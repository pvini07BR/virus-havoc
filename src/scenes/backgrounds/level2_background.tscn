[gd_scene load_steps=12 format=2]

[ext_resource path="res://scenes/backgrounds/level2_background.gd" type="Script" id=12]
[ext_resource path="res://assets/images/backgroundElements/level2/groundTile.png" type="Texture" id=15]
[ext_resource path="res://assets/images/backgroundElements/level2/backgroundBlur.png" type="Texture" id=16]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float Shift_Hue;

void fragment() {
// Input:3
	vec3 input_color;
	vec4 texture_color = texture(TEXTURE, UV);
	input_color = texture_color.rgb;

// VectorFunc:2
	vec3 color_hsv;
	{
		vec3 c = input_color;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		color_hsv=vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}

	color_hsv.x = mod((color_hsv.x + Shift_Hue), 1.0f);

// VectorFunc:5
	vec3 color_rgb;
	{
		vec3 c = color_hsv;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		color_rgb=c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}

// Output:0
	texture_color = vec4(color_rgb.rgb,texture_color.a);
	COLOR.rgba = texture_color;

}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/Shift_Hue = 0.0

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float Shift_Hue;

void fragment() {
// Input:3
	vec3 input_color;
	vec4 texture_color = texture(TEXTURE, UV);
	input_color = texture_color.rgb;

// VectorFunc:2
	vec3 color_hsv;
	{
		vec3 c = input_color;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		color_hsv=vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}

	color_hsv.x = mod((color_hsv.x + Shift_Hue), 1.0f);

// VectorFunc:5
	vec3 color_rgb;
	{
		vec3 c = color_hsv;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		color_rgb=c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}

// Output:0
	texture_color = vec4(color_rgb.rgb,texture_color.a);
	COLOR.rgba = texture_color;

}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/Shift_Hue = 0.0

[sub_resource type="Animation" id=5]
length = 60.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("BG:material:shader_param/Shift_Hue")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 60 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/Shift_Hue")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 60 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="SpatialMaterial" id=6]
flags_unshaded = true
albedo_texture = ExtResource( 15 )
uv1_scale = Vector3( 10, 30, 0 )
uv2_offset = Vector3( 0, 1, 0 )

[sub_resource type="SpatialMaterial" id=7]
flags_unshaded = true
albedo_texture = ExtResource( 15 )
uv1_scale = Vector3( 10, 30, 0 )
uv2_offset = Vector3( 0, 1, 0 )

[sub_resource type="Animation" id=8]
resource_name = "groundMoving"
length = 5.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("CSGBox:material:uv1_offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CSGBox2:material_override:uv1_offset")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, -1, 0 ) ]
}

[node name="level2_background" type="Node2D"]
script = ExtResource( 12 )

[node name="BG" type="TextureRect" parent="."]
material = SubResource( 2 )
margin_top = 4.0
margin_right = 3840.0
margin_bottom = 724.0
stretch_mode = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 4 )
texture = ExtResource( 16 )
centered = false

[node name="backgroundMoving" type="AnimationPlayer" parent="."]
autoplay = "moving"
anims/moving = SubResource( 5 )

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 1280, 720 )
transparent_bg = true
render_target_v_flip = true

[node name="Spatial" type="Spatial" parent="Viewport"]

[node name="Camera" type="Camera" parent="Viewport/Spatial"]
transform = Transform( -1, 0, 8.74228e-08, 0, 1, 0, -8.74228e-08, 0, -1, -0.17524, 21.0942, -177.115 )
far = 180.0

[node name="CSGBox" type="CSGBox" parent="Viewport/Spatial"]
transform = Transform( 200, 0, 0, 0, 1, 0, 0, 0, 56.1841, 0, 2, -93.668 )
generate_lightmap = false
calculate_tangents = false
height = 0.001
material = SubResource( 6 )

[node name="CSGBox2" type="CSGBox" parent="Viewport/Spatial"]
transform = Transform( 200, 0, 0, 0, 1, 0, 0, 0, 56.1841, 0, 40.2, -93.668 )
material_override = SubResource( 7 )
cast_shadow = 0
calculate_tangents = false
height = 0.001

[node name="AnimationPlayer" type="AnimationPlayer" parent="Viewport/Spatial"]
autoplay = "groundMoving"
anims/groundMoving = SubResource( 8 )
